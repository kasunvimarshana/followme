<!-- /*-------------------------------------------------------------------------------------------*/ -->
Employee::select('firstname', 'lastname', 'employee_job_id')->where('firstname', 'like', "%$word%")->orWhere('lastname', 'like', "%$word%")->with(['job' => function($query) {
    $query->select('id', 'name');
}])->get();
<!-- /*-------------------------------------------------------------------------------------------*/ -->

<!-- /*-------------------------------------------------------------------------------------------*/ -->
if ($request->has('page') && $request->get('page') > 1) {
        $offset = ((int)$request->get('page', 1) - 1) * (int)$request->input('limit', 20);
    }

    $modules = Modules::with('actions');

    if ($request->input('module_id')) {
        $modules->where('id', (int)$request->input('module_id'));
    }

    if ($request->input('p')) {
        $search = $request->input('p');
        $modules->whereHas('actions', function($query) use ($search){
            $query->where('action', 'LIKE', "%$search%");
            $query->orWhere('display', 'LIKE', "%$search%");
        });
    }

    $paging = new PagingComponent($modules->count(), $offset, $limit);

    $list = $modules->limit($limit)->offset($offset)->get();
    $resource = new Collection($list, new ListingActionsTransformer());
    $data = $this->fractal->createData($resource)->toArray();
    $data['paging'] = $paging->render();
<!-- /*-------------------------------------------------------------------------------------------*/ -->

